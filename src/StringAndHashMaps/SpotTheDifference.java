package StringAndHashMaps;/*
*
* This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters.
*  t is generated by shuffling the letters in s as well as potentially adding an additional random character.
*  Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
Note: You may assume that at most one additional character can be added to t.

Ex: Given the following strings...

s = "foobar", t = "barfoot", return 't'
s = "ide", t = "idea", return 'a'
s = "coding", t "ingcod", return ''
* */

import java.util.HashMap;
import java.util.Map;

public class SpotTheDifference {

    public static void main(String[] args) {
         String s = "foobar", t = "barfoot";
        //System.out.println(diff(s,t));
        System.out.println(diffChatGpt(s,t));

        int fr[] = new int[128-65];
        int j =0;
        for (int i = 65; i < 128; i++) {
            char x = (char) i;
            System.out.print(i+" "+x+" "+fr[j++]+"\n");

        }
    }

    public static String diff(String s, String t) {
        if (t.length() == 0){
            return "";
        }
        HashMap<Character,Integer> hashMap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (!hashMap.containsKey(s.charAt(i)))
            {
                hashMap.put(s.charAt(i), hashMap.getOrDefault(s.charAt(i),0));
            }
            else {
                hashMap.put(s.charAt(i), hashMap.getOrDefault(s.charAt(i),0)+1);
            }
        }
        for (int i = 0; i < t.length(); i++) {
            if (!hashMap.containsKey(t.charAt(i)))
            {
                hashMap.put(t.charAt(i), hashMap.getOrDefault(t.charAt(i),0));
            }
            else {
                hashMap.put(t.charAt(i), hashMap.getOrDefault(t.charAt(i),0)+1);
            }
        }
        System.out.println(hashMap);

        for (Map.Entry<Character, Integer> entry : hashMap.entrySet()) {
            if (entry.getValue()<=0){
                return entry.getKey()+"";
            }
        }

        return "";
    }


    public static String diffChatGpt(String s, String t) {
       int[] freq = new int[128];
       // System.out.println("-> "+freq[97]);

        for (int i = 0; i < s.length(); i++) {
            freq[s.charAt(i)]++;
        }

        for (int i = 0; i < t.length(); i++) {
            freq[t.charAt(i)]--;
            if (freq[t.charAt(i)] < 0) {
                return t.charAt(i) + "";
            }
        }

        return "";
    }




}
